// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Npgsql.EntityFrameworkCore.PostgreSQL.Metadata;
using WpfApp1;

#nullable disable

namespace WpfApp1.Migrations
{
    [DbContext(typeof(InventoryDbContext))]
    partial class InventoryDbContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "7.0.5")
                .HasAnnotation("Relational:MaxIdentifierLength", 63);

            NpgsqlModelBuilderExtensions.UseIdentityByDefaultColumns(modelBuilder);

            modelBuilder.Entity("WpfApp1.Client", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasColumnName("id");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<string>("Address")
                        .HasColumnType("text")
                        .HasColumnName("address");

                    b.Property<int?>("Discount")
                        .HasColumnType("integer")
                        .HasColumnName("discount");

                    b.Property<string>("Login")
                        .IsRequired()
                        .HasColumnType("text")
                        .HasColumnName("login");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("text")
                        .HasColumnName("name");

                    b.Property<string>("Password")
                        .IsRequired()
                        .HasColumnType("text")
                        .HasColumnName("password");

                    b.Property<decimal?>("Ransom")
                        .HasColumnType("money")
                        .HasColumnName("ransom");

                    b.HasKey("Id")
                        .HasName("clients_pkey");

                    b.ToTable("clients", (string)null);
                });

            modelBuilder.Entity("WpfApp1.Order", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasColumnName("id")
                        .HasDefaultValueSql("nextval('orders_id_seq'::regclass)");

                    b.Property<int>("Orderid")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasColumnName("orderid")
                        .HasDefaultValueSql("nextval('orders_orderid_seq'::regclass)");

                    b.Property<int>("Productcount")
                        .HasColumnType("integer")
                        .HasColumnName("productcount");

                    b.Property<int>("Productid")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasColumnName("productid")
                        .HasDefaultValueSql("nextval('orders_productid_seq'::regclass)");

                    b.HasKey("Id")
                        .HasName("orders_pkey");

                    b.HasIndex("Orderid");

                    b.HasIndex("Productid");

                    b.ToTable("order", (string)null);
                });

            modelBuilder.Entity("WpfApp1.OrdersList", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasColumnName("id")
                        .HasDefaultValueSql("nextval('orders_id_seq1'::regclass)");

                    b.Property<int>("Clientid")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasColumnName("clientid");

                    b.Property<DateOnly>("Dateofcreate")
                        .HasColumnType("date")
                        .HasColumnName("dateofcreate");

                    b.Property<decimal>("Sum")
                        .HasColumnType("money")
                        .HasColumnName("sum");

                    b.HasKey("Id")
                        .HasName("orders_pkey1");

                    b.HasIndex("Clientid");

                    b.ToTable("orders", (string)null);
                });

            modelBuilder.Entity("WpfApp1.Product", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasColumnName("id");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<int>("Countofprod")
                        .HasColumnType("integer")
                        .HasColumnName("countofprod");

                    b.Property<string>("Description")
                        .HasColumnType("text")
                        .HasColumnName("description");

                    b.Property<string>("Model")
                        .HasColumnType("text")
                        .HasColumnName("model");

                    b.Property<string>("Nameproduct")
                        .IsRequired()
                        .HasColumnType("text")
                        .HasColumnName("nameproduct");

                    b.Property<decimal>("Price")
                        .HasColumnType("money")
                        .HasColumnName("price");

                    b.Property<string>("Producername")
                        .HasColumnType("text")
                        .HasColumnName("producername");

                    b.Property<int>("Producttypeid")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasColumnName("producttypeid");

                    b.HasKey("Id")
                        .HasName("products_pkey");

                    b.HasIndex("Producttypeid")
                        .IsUnique();

                    b.HasIndex(new[] { "Producttypeid" }, "product");

                    b.ToTable("products", (string)null);
                });

            modelBuilder.Entity("WpfApp1.Producttype", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasColumnName("id");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<int?>("Count")
                        .HasColumnType("integer");

                    b.Property<string>("Productname")
                        .IsRequired()
                        .HasColumnType("text")
                        .HasColumnName("productname");

                    b.HasKey("Id")
                        .HasName("producttype_pkey");

                    b.ToTable("producttype", (string)null);
                });

            modelBuilder.Entity("WpfApp1.Soldproduct", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasColumnName("id");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<int>("Clientid")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasColumnName("clientid");

                    b.Property<DateOnly>("Dateofsold")
                        .HasColumnType("date")
                        .HasColumnName("dateofsold");

                    b.Property<int>("Orderid")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasColumnName("orderid");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Orderid"));

                    b.Property<int>("Productid")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasColumnName("productid");

                    b.HasKey("Id")
                        .HasName("soldproducts_pkey");

                    b.HasIndex("Clientid");

                    b.HasIndex("Productid");

                    b.ToTable("soldproducts", (string)null);
                });

            modelBuilder.Entity("WpfApp1.User", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<int>("Acess")
                        .HasColumnType("integer");

                    b.Property<string>("Address")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("Documents")
                        .IsRequired()
                        .HasColumnType("json");

                    b.Property<string>("Login")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("Password")
                        .IsRequired()
                        .HasColumnType("text");

                    b.HasKey("Id")
                        .HasName("Users_pkey");

                    b.ToTable("Users");
                });

            modelBuilder.Entity("WpfApp1.Order", b =>
                {
                    b.HasOne("WpfApp1.Order", "OrderNavigation")
                        .WithMany("InverseOrderNavigation")
                        .HasForeignKey("Orderid")
                        .IsRequired()
                        .HasConstraintName("Orders");

                    b.HasOne("WpfApp1.Product", "Product")
                        .WithMany("Orders")
                        .HasForeignKey("Productid")
                        .IsRequired()
                        .HasConstraintName("orders");

                    b.Navigation("OrderNavigation");

                    b.Navigation("Product");
                });

            modelBuilder.Entity("WpfApp1.OrdersList", b =>
                {
                    b.HasOne("WpfApp1.Client", "Client")
                        .WithMany("Order1s")
                        .HasForeignKey("Clientid")
                        .IsRequired()
                        .HasConstraintName("Orders");

                    b.Navigation("Client");
                });

            modelBuilder.Entity("WpfApp1.Product", b =>
                {
                    b.HasOne("WpfApp1.Producttype", "Producttype")
                        .WithOne("Product")
                        .HasForeignKey("WpfApp1.Product", "Producttypeid")
                        .IsRequired()
                        .HasConstraintName("products");

                    b.Navigation("Producttype");
                });

            modelBuilder.Entity("WpfApp1.Soldproduct", b =>
                {
                    b.HasOne("WpfApp1.Client", "Client")
                        .WithMany("Soldproducts")
                        .HasForeignKey("Clientid")
                        .IsRequired()
                        .HasConstraintName("SoldProducts");

                    b.HasOne("WpfApp1.Product", "Product")
                        .WithMany("Soldproducts")
                        .HasForeignKey("Productid")
                        .IsRequired()
                        .HasConstraintName("soldproducts");

                    b.Navigation("Client");

                    b.Navigation("Product");
                });

            modelBuilder.Entity("WpfApp1.Client", b =>
                {
                    b.Navigation("Order1s");

                    b.Navigation("Soldproducts");
                });

            modelBuilder.Entity("WpfApp1.Order", b =>
                {
                    b.Navigation("InverseOrderNavigation");
                });

            modelBuilder.Entity("WpfApp1.Product", b =>
                {
                    b.Navigation("Orders");

                    b.Navigation("Soldproducts");
                });

            modelBuilder.Entity("WpfApp1.Producttype", b =>
                {
                    b.Navigation("Product");
                });
#pragma warning restore 612, 618
        }
    }
}
